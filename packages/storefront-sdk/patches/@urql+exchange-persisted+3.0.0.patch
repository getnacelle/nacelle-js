diff --git a/node_modules/@urql/exchange-persisted/dist/urql-exchange-persisted.js b/node_modules/@urql/exchange-persisted/dist/urql-exchange-persisted.js
index 8fb7cd9..1dad58c 100644
--- a/node_modules/@urql/exchange-persisted/dist/urql-exchange-persisted.js
+++ b/node_modules/@urql/exchange-persisted/dist/urql-exchange-persisted.js
@@ -98,7 +98,7 @@ var persistedExchange = options => ({
           }
         };
         if (persistedOperation.kind === 'query' && preferGetForPersistedQueries) {
-          persistedOperation.context.preferGetMethod = 'force';
+          persistedOperation.context.preferGetMethod = 'within-url-limit';
         }
       }
       return persistedOperation;
diff --git a/node_modules/@urql/exchange-persisted/dist/urql-exchange-persisted.min.js b/node_modules/@urql/exchange-persisted/dist/urql-exchange-persisted.min.js
index 65f1fad..ecb2afc 100644
--- a/node_modules/@urql/exchange-persisted/dist/urql-exchange-persisted.min.js
+++ b/node_modules/@urql/exchange-persisted/dist/urql-exchange-persisted.min.js
@@ -1,2 +1,2 @@
-Object.defineProperty(exports,"__esModule",{value:!0});var e,r=require("wonka"),t=require("@urql/core"),n="undefined"!=typeof window?window.crypto:"undefined"!=typeof self?self.crypto:null,s=async r=>{if(n&&n.subtle){var t=await n.subtle.digest({name:"SHA-256"},(new TextEncoder).encode(r));return new Uint8Array(t).reduce(((e,r)=>e+r.toString(16).padStart(2,"0")),"")}return await(async()=>{if(!e)try{e=new Function("require",'return require("crypto")')(require)}catch(r){try{e=new Function('return import("crypto")')()}catch(e){}}return e})()?(await e).createHash("sha256").update(r).digest("hex"):""};exports.persistedExchange=e=>({forward:n})=>{e||(e={});var i=!!e.preferGetForPersistedQueries,o=!!e.enforcePersistedQueries,a=e.generateHash||s,u=!!e.enableForMutation,p=!0,d=e=>p&&!e.context.persistAttempt&&(u&&"mutation"===e.kind||"query"===e.kind);return e=>{var s=r.makeSubject(),u=r.filter((e=>!d(e)))(e),c=r.mergeMap(r.fromPromise)(r.map((async e=>{var r=t.makeOperation(e.kind,e,{...e.context,persistAttempt:!0}),n=await a(t.stringifyDocument(e.query),e.query);return n&&(r.extensions={...r.extensions,persistedQuery:{version:1,sha256Hash:n}},"query"===r.kind&&i&&(r.context.preferGetMethod="force")),r}))(r.filter(d)(e)));return r.filter((e=>!!e))(r.map((e=>{if(!o&&e.operation.extensions&&e.operation.extensions.persistedQuery){if(e.error&&e.error.graphQLErrors.some((e=>"PersistedQueryNotSupported"===e.message))){p=!1;var r=t.makeOperation(e.operation.kind,e.operation);return r.extensions&&delete r.extensions.persistedQuery,s.next(r),null}if(e.error&&e.error.graphQLErrors.some((e=>"PersistedQueryNotFound"===e.message))){var n=t.makeOperation(e.operation.kind,e.operation);return n.extensions={...n.extensions,persistedQuery:{...(n.extensions||{}).persistedQuery,miss:!0}},s.next(n),null}}return e}))(n(r.merge([c,u,s.source]))))}};
+Object.defineProperty(exports,"__esModule",{value:!0});var e,r=require("wonka"),t=require("@urql/core"),n="undefined"!=typeof window?window.crypto:"undefined"!=typeof self?self.crypto:null,s=async r=>{if(n&&n.subtle){var t=await n.subtle.digest({name:"SHA-256"},(new TextEncoder).encode(r));return new Uint8Array(t).reduce(((e,r)=>e+r.toString(16).padStart(2,"0")),"")}return await(async()=>{if(!e)try{e=new Function("require",'return require("crypto")')(require)}catch(r){try{e=new Function('return import("crypto")')()}catch(e){}}return e})()?(await e).createHash("sha256").update(r).digest("hex"):""};exports.persistedExchange=e=>({forward:n})=>{e||(e={});var i=!!e.preferGetForPersistedQueries,o=!!e.enforcePersistedQueries,a=e.generateHash||s,u=!!e.enableForMutation,p=!0,d=e=>p&&!e.context.persistAttempt&&(u&&"mutation"===e.kind||"query"===e.kind);return e=>{var s=r.makeSubject(),u=r.filter((e=>!d(e)))(e),c=r.mergeMap(r.fromPromise)(r.map((async e=>{var r=t.makeOperation(e.kind,e,{...e.context,persistAttempt:!0}),n=await a(t.stringifyDocument(e.query),e.query);return n&&(r.extensions={...r.extensions,persistedQuery:{version:1,sha256Hash:n}},"query"===r.kind&&i&&(r.context.preferGetMethod="within-url-limit")),r}))(r.filter(d)(e)));return r.filter((e=>!!e))(r.map((e=>{if(!o&&e.operation.extensions&&e.operation.extensions.persistedQuery){if(e.error&&e.error.graphQLErrors.some((e=>"PersistedQueryNotSupported"===e.message))){p=!1;var r=t.makeOperation(e.operation.kind,e.operation);return r.extensions&&delete r.extensions.persistedQuery,s.next(r),null}if(e.error&&e.error.graphQLErrors.some((e=>"PersistedQueryNotFound"===e.message))){var n=t.makeOperation(e.operation.kind,e.operation);return n.extensions={...n.extensions,persistedQuery:{...(n.extensions||{}).persistedQuery,miss:!0}},s.next(n),null}}return e}))(n(r.merge([c,u,s.source]))))}};
 //# sourceMappingURL=urql-exchange-persisted.min.js.map
diff --git a/node_modules/@urql/exchange-persisted/dist/urql-exchange-persisted.min.mjs b/node_modules/@urql/exchange-persisted/dist/urql-exchange-persisted.min.mjs
index 7f915ea..adbee9f 100644
--- a/node_modules/@urql/exchange-persisted/dist/urql-exchange-persisted.min.mjs
+++ b/node_modules/@urql/exchange-persisted/dist/urql-exchange-persisted.min.mjs
@@ -1,2 +1,2 @@
-import{makeSubject as e,filter as r,mergeMap as t,fromPromise as n,map as s,merge as o}from"wonka";import{makeOperation as i,stringifyDocument as a}from"@urql/core";var u,d="undefined"!=typeof window?window.crypto:"undefined"!=typeof self?self.crypto:null,p=async e=>{if(d&&d.subtle){var r=await d.subtle.digest({name:"SHA-256"},(new TextEncoder).encode(e));return new Uint8Array(r).reduce(((e,r)=>e+r.toString(16).padStart(2,"0")),"")}return await(async()=>{if(!u)try{u=new Function("require",'return require("crypto")')(require)}catch(e){try{u=new Function('return import("crypto")')()}catch(e){}}return u})()?(await u).createHash("sha256").update(e).digest("hex"):""},c=u=>({forward:d})=>{u||(u={});var c=!!u.preferGetForPersistedQueries,y=!!u.enforcePersistedQueries,f=u.generateHash||p,x=!!u.enableForMutation,m=!0,w=e=>m&&!e.context.persistAttempt&&(x&&"mutation"===e.kind||"query"===e.kind);return u=>{var p=e(),x=r((e=>!w(e)))(u),l=t(n)(s((async e=>{var r=i(e.kind,e,{...e.context,persistAttempt:!0}),t=await f(a(e.query),e.query);return t&&(r.extensions={...r.extensions,persistedQuery:{version:1,sha256Hash:t}},"query"===r.kind&&c&&(r.context.preferGetMethod="force")),r}))(r(w)(u)));return r((e=>!!e))(s((e=>{if(!y&&e.operation.extensions&&e.operation.extensions.persistedQuery){if(e.error&&e.error.graphQLErrors.some((e=>"PersistedQueryNotSupported"===e.message))){m=!1;var r=i(e.operation.kind,e.operation);return r.extensions&&delete r.extensions.persistedQuery,p.next(r),null}if(e.error&&e.error.graphQLErrors.some((e=>"PersistedQueryNotFound"===e.message))){var t=i(e.operation.kind,e.operation);return t.extensions={...t.extensions,persistedQuery:{...(t.extensions||{}).persistedQuery,miss:!0}},p.next(t),null}}return e}))(d(o([l,x,p.source]))))}};export{c as persistedExchange};
+import{makeSubject as e,filter as r,mergeMap as t,fromPromise as n,map as s,merge as o}from"wonka";import{makeOperation as i,stringifyDocument as a}from"@urql/core";var u,d="undefined"!=typeof window?window.crypto:"undefined"!=typeof self?self.crypto:null,p=async e=>{if(d&&d.subtle){var r=await d.subtle.digest({name:"SHA-256"},(new TextEncoder).encode(e));return new Uint8Array(r).reduce(((e,r)=>e+r.toString(16).padStart(2,"0")),"")}return await(async()=>{if(!u)try{u=new Function("require",'return require("crypto")')(require)}catch(e){try{u=new Function('return import("crypto")')()}catch(e){}}return u})()?(await u).createHash("sha256").update(e).digest("hex"):""},c=u=>({forward:d})=>{u||(u={});var c=!!u.preferGetForPersistedQueries,y=!!u.enforcePersistedQueries,f=u.generateHash||p,x=!!u.enableForMutation,m=!0,w=e=>m&&!e.context.persistAttempt&&(x&&"mutation"===e.kind||"query"===e.kind);return u=>{var p=e(),x=r((e=>!w(e)))(u),l=t(n)(s((async e=>{var r=i(e.kind,e,{...e.context,persistAttempt:!0}),t=await f(a(e.query),e.query);return t&&(r.extensions={...r.extensions,persistedQuery:{version:1,sha256Hash:t}},"query"===r.kind&&c&&(r.context.preferGetMethod="within-url-limit")),r}))(r(w)(u)));return r((e=>!!e))(s((e=>{if(!y&&e.operation.extensions&&e.operation.extensions.persistedQuery){if(e.error&&e.error.graphQLErrors.some((e=>"PersistedQueryNotSupported"===e.message))){m=!1;var r=i(e.operation.kind,e.operation);return r.extensions&&delete r.extensions.persistedQuery,p.next(r),null}if(e.error&&e.error.graphQLErrors.some((e=>"PersistedQueryNotFound"===e.message))){var t=i(e.operation.kind,e.operation);return t.extensions={...t.extensions,persistedQuery:{...(t.extensions||{}).persistedQuery,miss:!0}},p.next(t),null}}return e}))(d(o([l,x,p.source]))))}};export{c as persistedExchange};
 //# sourceMappingURL=urql-exchange-persisted.min.mjs.map
diff --git a/node_modules/@urql/exchange-persisted/dist/urql-exchange-persisted.mjs b/node_modules/@urql/exchange-persisted/dist/urql-exchange-persisted.mjs
index eb076f5..17390fe 100644
--- a/node_modules/@urql/exchange-persisted/dist/urql-exchange-persisted.mjs
+++ b/node_modules/@urql/exchange-persisted/dist/urql-exchange-persisted.mjs
@@ -60,7 +60,7 @@ var persistedExchange = u => ({forward: p}) => {
           }
         };
         if ("query" === r.kind && d) {
-          r.context.preferGetMethod = "force";
+          r.context.preferGetMethod = "within-url-limit";
         }
       }
       return r;
